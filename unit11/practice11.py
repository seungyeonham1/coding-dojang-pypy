
# 값이 연속적으로 이어진 자료형 = 시퀀스 자료형
# list, tuple, range, str을 주로 사용



# 시퀀스 객체 안에 특정 값이 있/없는지 확인
# in 연산자 
# 있으면 true / 없으면 false
# not in 연산자
# 없으면 true / 있으면 false

# 시퀀스 객체 연결
# + 언산자로 시퀀스 객체를 연결할 수 있음
# range(a,b) + range(c,d) =  range(a,b,c,d)


#a = 'hello, ' + str(10)
#print(a)

# 시퀀스 객체 반복
# 시퀀스 객체 * 정수  
# [0, 10, 20 ,30] * 3  = [0, 10, 20, 30, 0, 10, 20, 30, 0, 10, 20, 30]

# range 연산자로 반복하는 방법 = list나 튜플로 만들어서 반복
# list(range(0, 5, 2)) * 3 

# 문자열로 반복 = '*' 연산자 사용

# 리스트, 튜플 요소 개수 구하기 
# len(시퀀스객체)


# 인덱스 사용하기
# 시퀀스 객체[인덱스]
# 인덱스는 위칫값을 뜻함, 인덱스는 항상 0부터 시작
# 시퀀스 객체에 인덱스를 지정하지 않으면 해당 객체 전체를 뜻함.

# 음수 인덱스인 경우, 뒤에서부터 요소에 접근함
# a = [1, 2, 3, 4] /  a[-1] = 4
# range, 문자열도 음수 인덱스로 접근 가능

# 요소에 값 할당 하기
# a[0] = 1, a[1] = 2 ....

# 요소 삭제 하기
# del 시퀀스 객체[인덱스]
# list는 요소를 삭제할 수 있으나, 튜플/range는 요소를 삭제할 수 없음

# 슬라이스 사용하기 ':'
# 시퀀스 객체[시작인덱스:끝인덱스]

# 요소가 10개 있는 리스트를 처음부터 끝까지 가져오기
# a = [0,1,2,3,4,5]
# a[0,6] 인덱스 0부터 6까지 잘라서 새리스트를 만듬

# 인덱스의 증가폭
# 시퀀스 객체[시작인덱스:끝인덱스:인덱스증가폭]

# 인덱스 생략
# 시퀀스 객체[:끝인덱스]

# 인덱스 생략하면서 증가폭 사용하기
# 시퀀스 객체[:끝인덱스:증가폭] 리스트의 처음부터 인덱스를 증가폭만큼 증가시키면서 <끝인덱스-1> 까지 가져옴
# 시퀀스 객체[시작인덱스::증가폭] 시작인덱스부터 증가폭만큼 증가시키면서 리스트의 마지막 요소까지 가져옴
# 시퀀스 객체[::증가폭] 리스트 전체에서 인덱스 0부터 증가폭만큼 증가시키면서 요소를 가져옴

# 시퀀스 객체[::] 와 시퀀스 객체[:]는 리스트 전체를 가져옴

# len 응용하여 리스트 전체 가져오기
# a[0:len(a)] 시작 인덱스에 0, 끝 인덱스에 len(a) 지정하여 리스트 전체 가져오기


# 튜플, range, 문자열에 슬라이스 사용하기
# 튜플[시작인덱스:끝인덱스]
# 튜플[시작인덱스:끝인덱스:인덱스증가폭]

# range객체[시직엔덱스:끝인덱스]
# range객체[시작인덱스:끝인덱스:인덱스증가폭]






